panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income, aes(fill = estimate)) +
geom_sf(data = land_grants, color = "black",
fill = "white", alpha = 0.75, lwd = 0.1) +
scale_fill_gradient2(high = "darkgreen") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
library(rgeos)
land_grants$centroids <- st_centroid(land_grants)
land_grants_centroids <- st_centroid(land_grants)
sf_use_s2(FALSE)
land_grants_centroids <- st_centroid(land_grants)
land_grants_centroids
land_grants
nm_income$centroids <- st_centroid(nm_income)
nm_income$centroids
nm_income_centroids <- st_centroid(nm_income)
ggplot() +
geom_sf(data = nm_income_centroids)
ggplot() +
geom_sf(data = nm_income_centroids) +
geom_sf(data = land_grants_centroids)
ggplot() +
geom_sf(data = nm_income_centroids, color = "black") +
geom_sf(data = land_grants_centroids, color = "grey") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income_centroids) +
geom_sf(data = land_grants_centroids, color = "grey") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income_centroids) +
geom_sf(data = land_grants_centroids) +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income_centroids) +
geom_sf(data = land_grants_centroids)
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_sf(data = land_grants_centroids) +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income, aes(color = estimate)) +
geom_sf(data = land_grants_centroids) +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
)
ggplot() +
geom_sf(data = nm_income, aes(color = estimate)) +
geom_sf(data = land_grants_centroids)
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_sf(data = land_grants_centroids)
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate))
land_grants$centroids <- st_coordinates(st_centroid(land_grants$geometry))
land_grants$centroids
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_points(data = land_grants, aes(x = X , y = Y))
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_point(data = land_grants, aes(x = X , y = Y))
land_grants
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_point(data = land_grants, aes(x = centroids.X , y = centroids.Y))
land_grants
land_grants$centroids
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_point(data = land_grants, aes(x = centroids$X , y = centroids$Y))
land_grants_centroids <- st_coordinates(st_centroid(land_grants$geometry))
land_grants_centroids
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_point(data = land_grants_centroids, aes(x = X , y = Y))
land_grants_centroids
class(land_grants_centroids)
land_grants_centroids <- data.frame(st_coordinates(st_centroid(land_grants$geometry)))
land_grants_centroids
ggplot() +
geom_sf(data = nm_income_centroids, aes(color = estimate)) +
geom_point(data = land_grants_centroids, aes(x = X , y = Y))
ggplot() +
geom_sf(data = nm_income, aes(color = estimate)) +
geom_point(data = land_grants_centroids, aes(x = X , y = Y))
ggplot() +
geom_sf(data = nm_income, aes(color = estimate))
ggplot() +
geom_sf(data = nm_income, aes(fill = estimate)) +
geom_point(data = land_grants_centroids, aes(x = X , y = Y))
ggplot() +
geom_sf(data = nm_income, aes(fill = estimate))
land_grants_centroids
ggplot() +
geom_sf(data = nm_income, aes(fill = estimate)) +
geom_point(data = land_grants_centroids, aes(x = X , y = Y), alpha = 0.23)
packages <- c("tidyverse", "ggmap", "sf", "rnaturalearth",
"rnaturalearthdata", "leaflet", "tidycensus",
"rgeos")
# Load all the packages in one command:
invisible(lapply(packages, library, character.only = TRUE))
chicago_schools <- st_read("data/school/chicago-schools.shp", quiet = T)
# Let's map that shapefile
ggplot(data = chicago_schools)+
geom_sf() +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)-> chicago_schools_map
chicago_schools_map
chicago_wards <- st_read("data/chicago/chicago.shp", quiet = T)
ggplot(data = chicago_wards)+
geom_sf() +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)-> chicago_wards_map
chicago_wards_map
ggplot() +
geom_sf(data = chicago_wards,
fill = "white", color = "black") +
geom_sf(data = chicago_schools,
aes(color = governance),
alpha = 1) +
scale_color_discrete(name = "Governance Type") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
) +
labs(title = "Chicago School Locations and Governance Types")-> chicago_gov_schools
ggplot() +
geom_sf(data = chicago_wards,
fill = "white", color = "black") +
geom_sf(data = chicago_schools,
aes(color = governance),
alpha = 1) +
scale_color_discrete(name = "Governance Type") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
) +
labs(title = "Chicago School Locations and Governance Types"
)-> chicago_gov_schools
chicago_gov_schools
ggplot() +
geom_sf(data = chicago_wards,
fill = "white", color = "black") +
geom_sf(data = chicago_schools,
aes(color = governance),
alpha = 1) +
scale_color_discrete(name = "Governance Type") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
) +
labs(title = "Chicago School Locations and Governance Types"
)-> chicago_gov_schools
ggplot() +
# Add base layer
geom_sf(data = chicago_wards,
fill = "white", color = "black") +
# And then the other
geom_sf(data = chicago_schools,
aes(color = governance),
alpha = 0.5) +
scale_color_discrete(name = "Governance Type") +
theme(
axis.text = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
) +
labs(title = "Chicago School Locations and Governance Types"
)-> chicago_gov_schools
chicago_gov_schools
options(tigris_use_cache = TRUE)
nm_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NM",
year = 2020,
geometry = T
)
nm_income
st_crs(nm_income)
ggplot() +
geom_sf(data = nm_income)
land_grants <- st_read("data/NM_grant_lands/nm_grant_lands.shp", quiet = T)
# check the line "geodetic CRS"
land_grants
st_crs(land_grants)
st_crs(nm_income)
options(htmltools.dir.version = FALSE)
packages <- c("tidyverse", "ggmap", "sf", "rnaturalearth",
"rnaturalearthdata", "leaflet", "tidycensus",
"rgeos")
invisible(lapply(packages, library, character.only = TRUE))
options(tigris_use_cache = TRUE)
nm_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NM",
year = 2020,
geometry = T
)
land_grants <- st_read("data/NM_grant_lands/nm_grant_lands.shp", quiet = T)
ggplot() +
geom_sf(data = nm_income,
aes(fill = estimate)) +
scale_fill_gradient2(
low = "white",
high = "darkgreen"
)-> nm_wealth
nm_wealth
sf_use_s2(FALSE)
nm_dist_mat <- nm_income %>%
st_centroid() %>%
st_distance(land_grants)
nm_dist_mat[1:10, 1:10]
nm_dist_mat <- nm_income %>%
st_centroid() %>%
st_distance(land_grants)
sf_use_s2(FALSE)
nm_dist_mat <- nm_income %>%
st_centroid() %>%
st_distance(land_grants)
packages <- c("tidyverse", "ggmap", "sf", "rnaturalearth",
"rnaturalearthdata", "leaflet", "tidycensus",
"rgeos")
invisible(lapply(packages, library, character.only = TRUE))
options(tigris_use_cache = TRUE)
nm_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NM",
year = 2020,
geometry = T
)
land_grants <- st_read("data/NM_grant_lands/nm_grant_lands.shp",
quiet = T)
ggplot() +
geom_sf(data = nm_income) +
geom_sf(data = land_grants)
ggplot() +
geom_sf(data = nm_income,
aes(fill = estimate)) +
scale_fill_gradient2(
low = "white",
high = "darkgreen"
)-> nm_wealth
nm_wealth
sf_use_s2(FALSE)
nm_dist_mat <- nm_income %>%
st_centroid() %>%
st_distance(land_grants)
nm_dist_mat[1:10, 1:10]
mean_dist <- data.frame(mean_dist = nm_dist_mat %>%
apply(1, mean) %>%
as.vector() %>%
magrittr::divide_by(1000))
mean_dist
ggplot(mean_dist, aes(x= mean_dist)) +
geom_histogram()
options(htmltools.dir.version = FALSE)
quantile(nm_income$estimate)
quantile(nm_income$estimate, na.rm = T)
quantile(nm_income$estimate, na.rm = T)[4]
nm_income %>%
filter(estimate >=  quantile(nm_income$estimate, na.rm = T)[4])-> upper_25
upper_25
dim(upper_25)
dim(nm_income)
nm_dist_mat <- nm_income %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
nm_dist_mat <- nm_income %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
nm_income %>%
filter(estimate >=  quantile(nm_income$estimate, na.rm = T)[4])-> upper_25
ggplot(upper_25) +
geom_sf()
upper25_dist_mat <- upper_25 %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
# look at the matrix
upper25_dist_mat[1:10, 1:10]
upper25_dist_mat <- upper_25 %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
sf_use_s2(FALSE)
upper25_dist_mat <- upper_25 %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
upper25_dist_mat
# look at the matrix
upper25_dist_mat[1:10, 1:10]
# now compute the mean distance in km
min_dist <- data.frame(min_dist = upper25_dist_mat %>%
apply(1, min) %>%
as.vector() %>%
magrittr::divide_by(1000))
# and look at the histogram of these values
ggplot(min_dist, aes(x= min_dist)) +
geom_histogram()
ggplot(upper_25) +
geom_sf() +
geom_sf(land_grants)
ggplot() +
geom_sf(upper_25) +
geom_sf(land_grants)
ggplot() +
geom_sf(data = upper_25) +
geom_sf(data = land_grants)
dim(upper_25)
dim(mean_dist)
dim(nm_income)
nm_income <- rbind(nm_income, mean_dist = nm_dist_mat %>%
apply(1, mean) %>%
as.vector() %>%
magrittr::divide_by(1000))
nm_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NM",
year = 2020,
geometry = T
)
sf_use_s2(FALSE)
nm_dist_mat <- nm_income %>%
st_centroid() %>%
st_distance(land_grants)
mean_dist
nm_income <- rbind(nm_income, mean_dist)
nm_income <- cbind(nm_income, mean_dist)
nm_income$mean_dist
ggplot(nm_income, aes(x= mean_dist)) +
geom_histogram()
ggplot(nm_income, aes(fill= mean_dist)) +
geom_sf()
ggplot(nm_income, aes(fill= mean_dist)) +
geom_sf(data = nm_income)
mean_dist
ggplot(nm_income, aes(fill= mean_dist)) +
geom_sf(data = nm_income) +
geom_sf(data = land_grants)
ggplot(nm_income) +
geom_sf(data = nm_income) +
geom_sf(data = land_grants)
ggplot() +
geom_sf(data = nm_income, aes(fill = mean_dist)) +
geom_sf(data = land_grants)
nm_income %>%
filter(estimate >=  quantile(nm_income$estimate, na.rm = T)[4])-> upper_25
ggplot(upper_25) +
geom_sf()
sf_use_s2(FALSE)
upper25_dist_mat <- upper_25 %>%
# get centroids of all census tracts in NM
st_centroid() %>%
# compute distance from land grant sites
st_distance(land_grants)
# look at the matrix
upper25_dist_mat[1:10, 1:10]
# now compute the mean distance in km
min_dist <- upper25_dist_mat %>%
apply(1, min) %>%
as.vector() %>%
magrittr::divide_by(1000)
upper_25 <- cbind(upper_25, min_dist)
# and look at the histogram of these values
ggplot(min_dist, aes(x= min_dist)) +
geom_histogram()
# and look at the histogram of these values
ggplot(upper_25, aes(x= min_dist)) +
geom_histogram()
ggplot() +
geom_sf(data = upper_25, aes(fill = min_dist)) +
geom_sf(data = land_grants)
chicago_ward_parks
chicago_parks <- st_read("data/parks/chicago-parks.shp", quiet = T)
sf_use_s2(FALSE)
st_join(chicago_wards, chicago_parks, largest= T) -> chicago_ward_parks
chicago_ward_parks %>%
leaflet()
chicago_ward_parks %>%
leaflet() %>%
setView(-103.4617, 44.58, zoom = 4)
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 4) %>%
addTiles()
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 8) %>%
addTiles()
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 10) %>%
addTiles()
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles()
chicago_ward_parks
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude,
clusterOptions = markerClusterOptions())
chicago_ward_parks
chicago_ward_parks %>%
st_centroid()
st_centroid(chicago_ward_parks)
chicago_ward_parks <- cbind(chicago_ward_parks, st_coordinates(st_centroid(chicago_ward_parks$geometry)))
chicago_ward_parks
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~X, ~Y,
clusterOptions = markerClusterOptions())
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~X, ~Y)
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~X, ~Y)
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~X, ~Y,
clusterOptions = markerClusterOptions())
chicago_ward_parks %>%
leaflet() %>%
setView(-87.6298, 41.8781, zoom = 11) %>%
addTiles() %>%
addMarkers(~X, ~Y)
packages <- c("tidyverse", "ggmap", "sf", "rnaturalearth",
"rnaturalearthdata", "leaflet", "tidycensus",
"rgeos")
# Load all the packages in one command:
invisible(lapply(packages, library, character.only = TRUE))
options(tigris_use_cache = TRUE)
nm_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NM",
year = 2020,
geometry = T
)
land_grants <- st_read("data/NM_grant_lands/nm_grant_lands.shp",
quiet = T)
ggplot() +
geom_sf(data = nm_income,
aes(fill = estimate)) +
scale_fill_gradient2(
low = "white",
high = "darkgreen"
)-> nm_wealth
nm_wealth
# create a distance matrix between centroids and the land grant features
sf_use_s2(FALSE)
nm_wealth
